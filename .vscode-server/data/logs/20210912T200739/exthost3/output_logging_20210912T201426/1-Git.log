Validating found git in: git
Using git 2.25.1 from git
> git rev-parse --git-dir
Open repository: /home/chrispro-1
> git status -z -u
> git check-ignore -v -z --stdin
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git check-ignore -v -z --stdin
> git show --textconv :hw
> git ls-files --stage -- /home/chrispro-1/hw
> git show --textconv :hw5
> git ls-files --stage -- /home/chrispro-1/hw5
> git check-ignore -v -z --stdin
> git show --textconv :.bash_history
> git ls-files --stage -- /home/chrispro-1/.bash_history
> git cat-file -s a26819d03f5b2f767dc22ce57f7dd4606bed51df
> git check-ignore -v -z --stdin
> git show --textconv :hw5
> git ls-files --stage -- /home/chrispro-1/hw5
> git show --textconv :print("Hi, this is Chris Pulido").py
> git ls-files --stage -- /home/chrispro-1/print("Hi, this is Chris Pulido").py
> git cat-file -s c6ae2bb98b70b6464f4203bec79f6013f4bbb1a9
> git check-ignore -v -z --stdin
> git check-ignore -v -z --stdin
> git check-ignore -v -z --stdin
> git show --textconv :hw5/main.py
> git ls-files --stage -- /home/chrispro-1/hw5/main.py
> git check-ignore -v -z --stdin
> git show --textconv :templates/index.html
> git ls-files --stage -- /home/chrispro-1/templates/index.html
> git check-ignore -v -z --stdin
> git show --textconv :hw5/main.py
> git ls-files --stage -- /home/chrispro-1/hw5/main.py
> git show --textconv :templates/index.html
> git ls-files --stage -- /home/chrispro-1/templates/index.html
> git show --textconv :hw5/main.py
> git ls-files --stage -- /home/chrispro-1/hw5/main.py
> git show --textconv :templates/index.html
> git ls-files --stage -- /home/chrispro-1/templates/index.html
> git show --textconv :hw5/main.py
> git ls-files --stage -- /home/chrispro-1/hw5/main.py
> git show --textconv :templates/index.html
> git ls-files --stage -- /home/chrispro-1/templates/index.html
> git show --textconv :hw5/main.py
> git ls-files --stage -- /home/chrispro-1/hw5/main.py
> git show --textconv :templates/index.html
> git ls-files --stage -- /home/chrispro-1/templates/index.html
> git show --textconv :hw5/main.py
> git ls-files --stage -- /home/chrispro-1/hw5/main.py
> git show --textconv :templates/index.html
> git ls-files --stage -- /home/chrispro-1/templates/index.html
> git show --textconv :templates/index.html
> git ls-files --stage -- /home/chrispro-1/templates/index.html
> git show --textconv :hw5/main.py
> git ls-files --stage -- /home/chrispro-1/hw5/main.py
> git show --textconv :templates/index.html
> git ls-files --stage -- /home/chrispro-1/templates/index.html
> git show --textconv :hw5/main.py
> git ls-files --stage -- /home/chrispro-1/hw5/main.py
> git show --textconv :templates/index.html
> git ls-files --stage -- /home/chrispro-1/templates/index.html
> git show --textconv :hw5/main.py
> git ls-files --stage -- /home/chrispro-1/hw5/main.py
> git check-ignore -v -z --stdin
> git show --textconv :.vscode/launch.json
> git ls-files --stage -- /home/chrispro-1/.vscode/launch.json
> git check-ignore -v -z --stdin
> git show --textconv :hw5/main.py
> git ls-files --stage -- /home/chrispro-1/hw5/main.py
> git show --textconv :.vscode/launch.json
> git ls-files --stage -- /home/chrispro-1/.vscode/launch.json
> git show --textconv :hw5/main.py
> git ls-files --stage -- /home/chrispro-1/hw5/main.py
> git log --format=%H%n%aN%n%aE%n%at%n%ct%n%P%n%B -z -n21 -- /home/chrispro-1/hw5/main.py
fatal: your current branch 'master' does not have any commits yet
> git show --textconv :templates/index.html
> git ls-files --stage -- /home/chrispro-1/templates/index.html
